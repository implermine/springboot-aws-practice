language: java
jdk:
  - openjdk8

branches:
  only:
    - master

# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.gradle'
#    - '$HOME/.m2/repository' #필요없음 maven 관련해서 필요한 캐싱임.

before_install:
  - chmod +x gradlew

install:
  - ./gradlew clean build

# travis-ci webserver package structure lookup
# /home/travis/build/BlossomWhale/springboot-aws-practice/settings.gradle
before_deploy:
  - zip -r springboot-aws-practice *
  - mkdir -p deploy # -p 필요없음 x 필요함, 멱등성으로 해당 폴더를 매번 만들 수는 없다. 이미 존재한다면 에러
  - mv springboot-aws-practice.zip deploy/springboot-aws-practice.zip


#deploy 란, travis 에서 s3로 보내는것 또한 포함이다.
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: springboot-aws-practice-build # 버킷이름은 고유하므로 해당 idf로 s3 bucket을 찾는다.
    region: ap-northeast-2
    skip_cleanup: true
    acl: private
    local_dir: deploy

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: springboot-aws-practice-build # S3 버킷
    key: springboot-aws-practice.zip # 빌드 파일을 압축해서 전달 -> before_deploy에서 zip파일로 만든 파일을 명시 (s3에 올라간 파일)
    # s3에서 가져오는거임 key는
    bundle_type: zip # 압축 확장자
    application: springboot-aws-practice # 웹 콘솔에서 등록한 CodeDeploy 애클리케이션, not group
    deployment_group: springboot-aws-practice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹, not application, inside-application
    region: ap-northeast-2
    wait-until-deployed: true


#script: "./gradlew clean build" # Travis-CI Web-server에서 build를 수행하네 # script로 수행 할 필요 없음.

# CI 실행 완료 시 메일로 알람 - doesn't need
#notifications:
#  email:
#    recipients:
#      - lkorea12345@gmail.com